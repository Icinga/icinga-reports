// array of all simulated Commands
sim_commands = [ "sim-ssh", "sim-disk", "sim-load", "sim-mysqld", "sim-mysql-repl", "sim-mysql-socket", "sim-httpd", "sim-http_procs", "sim-http-socket" ]

// Return Status and perfdata based on timeperiods
object CheckCommand "sim-command-template" {
  import "dummy"
  vars.random_perf_OK = {{ Math.random() * 80 }}
  vars.random_perf_WARN = {{ Math.random() * 10 + 80 }}
  vars.random_perf_CRIT = {{ Math.random() * 10 + 90 }}
  vars.dummy_state = {{
    if (get_time_period(macro("$critical_period$")).is_inside) {
      return 2
    } else {
      if (get_time_period(macro("$warning_period$")).is_inside) {
        return 1
      } else {
        return 0
      }
    }
  }}
  vars.dummy_text = {{
    if (get_time_period(macro("$critical_period$")).is_inside) {
      return "Error FAIL | 'random_perf'=" + macro("$random_perf_OK$") + ";80;90;0;100"
    } else {
      if (get_time_period(macro("$warning_period$")).is_inside) {
        return "Warning State! | 'random_perf'=" + macro("$random_perf_WARN$") + ";80;90;0;100"
      } else {
        return "Check was successful! | 'random_perf'=" + macro("$random_perf_CRIT$") + ";80;90;0;100"
      }
    }
  }}
}
object CheckCommand "sim-host" {
  import "dummy"
  vars.random_perf_UP = {{ Math.random() * 80 }}
  vars.random_perf_DOWN = {{ Math.random() * 10 + 90 }}
  vars.dummy_state = {{
    if (get_time_period(macro("$critical_period$")).is_inside) {
      return 2
    } else {
      return 0
    }
  }}
  vars.dummy_text = {{
   if (get_time_period(macro("$critical_period$")).is_inside) {
      return "Host Down | 'host_random'=" + macro("$random_perf_DOWN$") + ";80;90;0;100"
    } else {
      return "Host Check was successful! | 'host_random'=" + macro("$random_perf_UP$") + ";80;90;0;100"
    }
  }}
}
for (simCommand in sim_commands) {
  object CheckCommand simCommand {
    import "sim-command-template"
  }
}
  
